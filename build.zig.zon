.{
    // This is the default name used by packages depending on this one. For
    // example, when a user runs `zig fetch --save <url>`, this field is used
    // as the key in the `dependencies` table. Although the user can choose a
    // different name, most users will stick with this provided value.
    //
    // It is redundant to include "zig" in this name because it is already
    // within the Zig package namespace.
    .name = .tracy,

    // This is a [Semantic Version](https://semver.org/).
    // In a future version of Zig it will be used for package deduplication.
    .version = "0.12.2",

    // Together with name, this represents a globally unique package
    // identifier. This field is generated by the Zig toolchain when the
    // package is first created, and then *never changes*. This allows
    // unambiguous detection of one package being an updated version of
    // another.
    //
    // When forking a Zig project, this id should be regenerated (delete the
    // field and run `zig build`) if the upstream project is still maintained.
    // Otherwise, the fork is *hostile*, attempting to take control over the
    // original project's identity. Thus it is recommended to leave the comment
    // on the following line intact, so that it shows up in code reviews that
    // modify the field.
    .fingerprint = 0x255a89eecd27f4ce, // Changing this has security and trust implications.

    // Tracks the earliest Zig version that the package considers to be a
    // supported use case.
    .minimum_zig_version = "0.14.0",

    // This field is optional.
    // Each dependency must either provide a `url` and `hash`, or a `path`.
    // `zig build --fetch` can be used to fetch all dependencies of a package, recursively.
    // Once all dependencies are fetched, `zig build` no longer requires
    // internet connectivity.
    .dependencies = .{
        // See `zig fetch --save <url>` for a command-line interface for adding dependencies.
        //.example = .{
        //    // When updating this field to a new URL, be sure to delete the corresponding
        //    // `hash`, otherwise you are communicating that you expect to find the old hash at
        //    // the new URL.
        //    .url = "https://example.com/foo.tar.gz",
        //
        //    // This is computed from the file contents of the directory of files that is
        //    // obtained after fetching `url` and applying the inclusion rules given by
        //    // `paths`.
        //    //
        //    // This field is the source of truth; packages do not come from a `url`; they
        //    // come from a `hash`. `url` is just one of many possible mirrors for how to
        //    // obtain a package matching this `hash`.
        //    //
        //    // Uses the [multihash](https://multiformats.io/multihash/) format.
        //    .hash = "...",
        //
        //    // When this is provided, the package is found in a directory relative to the
        //    // build root. In this case the package's hash is irrelevant and therefore not
        //    // computed. This field and `url` are mutually exclusive.
        //    .path = "foo",
        //
        //    // When this is set to `true`, a package is declared to be lazily
        //    // fetched. This makes the dependency only get fetched if it is
        //    // actually used.
        //    .lazy = false,
        //},

        .imgui = .{ // Dear ImGui: Bloat-free Graphical User interface
            .url = "git+https://github.com/ocornut/imgui.git?ref=v1.91.9b-docking#4806a1924ff6181180bf5e4b8b79ab4394118875",
            .hash = "N-V-__8AACbncwDdHLMz3EkS8iDHirtmHehU_FWTuKnmd9ik",
        },
        .glfw = .{ // A fork of GLFW packaged for the Zig build system
            .url = "git+https://github.com/FalsePattern/glfw.git#5bab509c4e34b94c18a1504c95d7e9ce5cb2d05a",
            .hash = "glfw_c-3.4.0-_9LYGAqqGQCrRETIkV6i6xZK-JPXkGp0lUkPadI2flTL",
            .lazy = true,
        },
        .capstone = .{ // Availability for capstone as Zig dependency
            .url = "git+https://github.com/allyourcodebase/capstone.git#ece2cef731de80b6a2d2beb461024196c8dfee9d",
            .hash = "capstone-6.0.0-Alpha4-tmNUgdI8AADDVL-qUUVmU0IGuFGpjz6-O7sBRjeB53yb",
            .lazy = true,
        },
        .zstd = .{ // zstd ported to the zig build system
            .url = "git+https://github.com/allyourcodebase/zstd.git?ref=1.5.7#01327d49cbc56dc24c20a167bb0055d7fc23de84",
            .hash = "zstd-1.5.7-KEItkJ8vAAC5_rRlKmLflYQ-eKXbAIQBWZNmmJtS18q0",
            .lazy = true,
        },
        .lz4 = .{ // lz4 ported to the zig build system
            .url = "git+https://github.com/allyourcodebase/lz4.git?ref=1.10.0-5#873969ee73aecb3c35203feaf0b5727b9d02b864",
            .hash = "lz4-1.10.0-5-ewyzw7YNAADOUkQ7M9fjW005oGzxt9b6m0uPd_kQC48z",
            .lazy = true,
        },
        .ini = .{ // A tiny ANSI C library for loading .ini config files
            .url = "git+https://github.com/rxi/ini.git#13a254c9e38def8924a83badfea5eda5a01b9295",
            .hash = "N-V-__8AALwkAAB_H_lRcdLYz-_DCoAy71ze0CtKLsHdDRD-",
        },
        .nativefiledialog_extended = .{ // nativefiledialog-extended ported to the zig build system
            .url = "git+https://github.com/allyourcodebase/nativefiledialog-extended.git?ref=1.2.1-2#dd47ba4b99b85c78f30a8faca0518ed913268c0a",
            .hash = "nativefiledialog_extended-1.2.1-2-_pDry5gcAAA701XtymPdScWmrLQ5Zuw9yZYm_bxp7DkQ",
        },
        .rpmalloc = .{ // Public domain cross platform lock free thread caching 16-byte aligned memory allocator implemented in C
            .url = "git+https://github.com/mjansson/rpmalloc.git?ref=1.4.5#e4393ff85585d91400bcbad2e7266c011075b673",
            .hash = "N-V-__8AAEi9BgBKV3vzD6pzRAbfs1f7lNp1wsrArxR79lx6",
        },
        .getopt_port = .{ // BSD-licensed getopt implementation
            .url = "git+https://github.com/kimgr/getopt_port.git#9d3d387087d252970923db7f297f681622c4e026",
            .hash = "N-V-__8AAJKtAACXam4qGbql--FmlkH5sGRDUY6n_tqMfZW-",
        },
        // .freetype = .{ // A fork of freetype packaged for the Zig build system
        //     .url = "git+https://github.com/hexops/freetype.git#972cd37bccecae2cc9f54cf0b562263a13209d02",
        //     .hash = "freetype-0.0.0-AAAAAA5JcwBMujojfNLEq5g_WijZtU56mRLYx8bjjiMU",
        //     .lazy = true,
        // },
        .wayland = .{
            .url = "git+https://github.com/allyourcodebase/wayland.git#381e053169a01ef33f16ceb18f4e7776ea4f72f3",
            .hash = "wayland-1.24.0-dxEBa1RlAADfFhaFgVOxvHQq8-NMmGS8ASz2vnDj_7Bx",
            .lazy = true,
        },
        .wayland_protocols = .{
            .url = "git+https://gitlab.freedesktop.org/wayland/wayland-protocols.git?ref=1.38#9ac1a0977eea1b2f525e375089131f7d696a74ee",
            .hash = "N-V-__8AAPSiCwBmhGfdDQlw65XlO55QP1pogBUo1ZeGUv_C",
            .lazy = true,
        },
        .libxkbcommon = .{
            .url = "git+https://github.com/allyourcodebase/libxkbcommon.git?ref=1.9.2#3eebf014dea884a3ea6968dccf5651f423647257",
            .hash = "libxkbcommon-1.9.2-93LaF-tRAgDYZON1GVWNUvTazOR9b2E8KEqXx2rEoKV5",
            .lazy = true,
        },

        // C/C++ header-only dependencies

        .stb = .{ // single-file public domain libraries
            .url = "git+https://github.com/nothings/stb.git#ae721c50eaf761660b4f90cc590453cdb0c2acd0",
            .hash = "N-V-__8AADb7TQBhnAapR8-szphSk_8WmU22BY8jadPC_8-d",
        },
        .dtl = .{ // diff template library
            .url = "git+https://github.com/cubicdaiya/dtl.git?ref=v1.21#32567bb9ec704f09040fb1ed7431a3d967e3df03",
            .hash = "N-V-__8AAKQTAgC4IUwwDQSA3kMErF_02NAb-DgnNFymn_wr",
        },
        .nlohmann_json = .{ // JSON for Modern C++
            .url = "git+https://github.com/nlohmann/json.git?ref=v3.11.3#9cca280a4d0ccf0c08f47a99aa71d1b0e52f8d03",
            .hash = "N-V-__8AAPwi1QA62l3pm0hnYBnFKtjqBqXK50MZxfH-Wq8C",
        },
        .pdqsort = .{ // Pattern-defeating quicksort.
            .url = "git+https://github.com/orlp/pdqsort.git#b1ef26a55cdb60d236a5cb199c4234c704f46726",
            .hash = "N-V-__8AAJ7xAABXU9I52yQSQ-zeeJEohtrHKj9ekUVZdlOR",
        },
        .ppqsort = .{ // PPQSort - Parallel Pattern Quicksort.
            .url = "git+https://github.com/GabTux/PPQSort.git?ref=v1.0.5#249da1c63b06824befc4ed643b883328cfdd6ba0",
            .hash = "N-V-__8AALk1AwB_-PJsG-Q9F1OHqaGovuaHaqFCkhppJHXw",
        },
        // THIS PROJECT HAS BEEN ARCHIVED
        .robin_hood_hashing = .{ // Fast & memory efficient hashtable based on robin hood hashing
            .url = "git+https://github.com/martinus/robin-hood-hashing.git#7697343363af4cc3f42cab17be49e6af9ab181e2",
            .hash = "N-V-__8AAMC4CwDqHbQUv2a4lEr_UXtrXeW5CWU6X3mzDLo6",
        },
        .xxHash = .{ // Extremely fast non-cryptographic hash algorithm
            .url = "git+https://github.com/Cyan4973/xxHash.git#a57f6cce2698049863af8c25787084ae0489d849",
            .hash = "N-V-__8AAGS5UgB9tuEDsjOj_PBuqhvifei8hQNtCQwmN6g4",
        },
    },
    // Specifies the set of files and directories that are included in this package.
    // Only files and directories listed here are included in the `hash` that
    // is computed for this package. Only files listed here will remain on disk
    // when using the zig package manager. As a rule of thumb, one should list
    // files required for compilation plus any license(s).
    // Paths are relative to the build root. Use the empty string (`""`) to refer to
    // the build root itself.
    // A directory listed here means that all files within, recursively, are included.
    .paths = .{
        "capture",
        "csvexport",
        "import",
        "include",
        "profiler",
        "public",
        "server",
        "update",

        "build.zig",
        "build.zig.zon",
        "LICENSE",
        "README.md",
    },
}
